---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by seancheey.
--- DateTime: 10/1/20 2:40 AM
---

local logging = {}

logging.E = 1
logging.W = 2
logging.I = 3
logging.D = 4
logging.V = 5

logging.categories = {
    [logging.E] = true,
    [logging.W] = true,
    [logging.I] = true,
    [logging.D] = true,
    [logging.V] = true
}

function logging.enableCategory(loggingCategory)
    assert(loggingCategory ~= nil)
    loggingCategory.categories[loggingCategory] = true
end

function logging.disableCategory(loggingCategory)
    assert(loggingCategory ~= nil)
    loggingCategory.categories[loggingCategory] = false
end

function logging.addCategory(loggingCategory, enabled)
    assert(loggingCategory ~= nil and enabled ~= nil)
    logging.categories[loggingCategory] = enabled
end

function logging.shouldOutput(loggingCategory)
    local should = logging.categories[loggingCategory]
    return should ~= nil and should or false
end

function logging.log(msg, loggingCategory)
    loggingCategory = loggingCategory or logging.D
    assert(logging.categories[loggingCategory] ~= nil, "no such logging category: " .. tostring(loggingCategory))
    if logging.shouldOutput(loggingCategory) then
        game.print(serpent.line(msg))
    end
end

return logging